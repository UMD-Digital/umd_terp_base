<?php

/**
 * @file
 * Ut_news module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\umd_terp_base\UmdTerpBase;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function ut_news_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ut_news':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting events, and then gets events, and displays.
 */
function ut_news_preprocess_paragraph__ut_news(&$variables) {

  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on Colleges and Schools filter.
  $colleges_schools = NULL;
  if (isset($variables['elements']['#paragraph']->field_ut_news_colleges_schools->value)) {
    $colleges_schools = _ut_news_format_filters($variables['elements']['#paragraph']->field_ut_news_colleges_schools->getValue());
  }

  // Check on Audience filter.
  $audience = NULL;
  if (isset($variables['elements']['#paragraph']->field_ut_news_audience->value)) {
    $audience = _ut_news_format_filters($variables['elements']['#paragraph']->field_ut_news_audience->getValue());
  }

  // Check on Topics filter.
  $topic = NULL;
  if (isset($variables['elements']['#paragraph']->field_ut_news_topics->value)) {
    $topic = _ut_news_format_filters($variables['elements']['#paragraph']->field_ut_news_topics->getValue());
  }

  // Check on Messaging Area filter.
  $messaging_area = NULL;
  if (isset($variables['elements']['#paragraph']->field_ut_news_messaging_area->value)) {
    $messaging_area = _ut_news_format_filters($variables['elements']['#paragraph']->field_ut_news_messaging_area->getValue());
  }

  // Check on Priorities filter.
  $priorities = NULL;
  if (isset($variables['elements']['#paragraph']->field_ut_news_priorities->value)) {
    $priorities = _ut_news_format_filters($variables['elements']['#paragraph']->field_ut_news_priorities->getValue());
  }

  // Get news.
  $variables['ut_news_list'] = _ut_news_get_news(
      $colleges_schools,
      $audience,
      $topic,
      $messaging_area,
      $priorities,
      3,
      $uuid
  );
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function ut_news_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__ut_news' => [
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_field_WIDGET_TYPE_paragraphs_form_alter().
 *
 * Adds "Content Tips" helper text to the paragraph.
 */
function ut_news_field_widget_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'ut_news') {
    // Tips text.
    $markup = '<ul>';
    $markup .= '<li><strong>IMPORTANT!</strong> You must configure bearer token on the <a href="/admin/config/umd_terp_base/config">UMD Terp Modules configuration</a> page.</li>';
    $markup .= '<li><strong>More filters may mean fewer results.</strong> Filters are additive. Each news article must meet all filtered requirements. Apply filters selectively.</li>';
    $markup .= '<li><strong>Clear your caches after saving a new filter combination.</strong> Calls to the HUB API are cached for efficiency. To view updated results, clear the cache every time you update this widget.</li>';
    $markup .= '<li><a target="_blank" href="/admin/help/ut_news">News Feed Module Help</a></li>';
    $markup .= '</ul>';

    $element['ut_news_tips'] = [
      '#type' => 'details',
      '#title' => t('UMD HUB News Feed Content Tips'),
      '#weight' => -1000,
    ];
    $element['ut_news_tips']['#markup'] = $markup;
  }
}

/**
 * CUSTOM FUNCTIONS.
 */

 /**
 * Formats multiple filters to send to the graphql endpoint.
 *
 */
function _ut_news_format_filters($filter) {
   $result = [];
  foreach($filter as $key => $value) {
    $result[] = intval($filter[$key]['value']);
  }
  return json_encode($result);
 }

/**
 * Gets news from UMD Today, and displays.
 *
 * See https://today.umd-staging.com/admin/graphiql for self documentation.
 */
function _ut_news_get_news(
    $colleges_schools = NULL,
    $audience = NULL,
    $topic = NULL,
    $messaging_area = NULL,
    $priorities = NULL,
    $range = 3,
    $id = 'news-default'
) {
  if ($cache = \Drupal::cache()->get('ut_news--' . $id)) {
    return $cache->data;
  }
  else {
    $fields = '{ title url postDate ... on articles_today_Entry { summary: genericText articlesHeroImage { url ... on hero_Asset { altText: genericText }}}}';
    $query = 'getArticlesByCategory{entries(section:\\"articles\\",limit:' . $range . ',';
    if (isset($colleges_schools) || isset($audience) || isset($topic)) {
      if (isset($colleges_schools)) {
        $query .= 'categoryCampusUnitsMultiple: ' . $colleges_schools . ',';
      }
      if (isset($audience)) {
        $query .= 'categoryAudienceMultiple: ' . $audience . ',';
      }
      if (isset($topic)) {
        $query .= 'categoryTagsMultiple: ' . $topic . ',';
      }
      if (isset($messaging_area)) {
        $query .= 'categoryMessagingAreaMultiple: ' . $messaging_area . ',';
      }
      if (isset($priorities)) {
        $query .= 'categoryPrioritiesInitiativesMultiple: ' . $priorities . ',';
      }
    }
    $query .= ')' . $fields . '}';

    $result = UmdTerpBase::middleware_get($query);
    $result = $result['data']['entries'];
    if ($result) {
      \Drupal::cache()->set('ut_news--' . $id, $result, time() + 900);
      return $result;
    }
    else {
      return NULL;
    }
  }
}
